############ INTEGRATING AD WITH THE *NIX WORLD ############

First things first: 

AD should be at least 2008 because we need to edit:

msDs-supportedEncryptionTypes
https://msdn.microsoft.com/en-us/library/cc223853.aspx

for the accounts that will be used by Unix boxes.

What we want to do is to enable AES for Kerberos that, by default, is not.

Look at AD-Kerberos-AES.ps1 below to have an idea on how to do that.



####### AD-Kerberos-AES.ps1 #######
# The numerical values for Kerberos AES encryption types to support
$AES128 = 0x8
$AES256 = 0x10

# Fetch all users from an OU with their current support encryption types attribute
$Users = Get-ADUser -Filter * -SearchBase "OU=alfresco,DC=tst,DC=lcl" -Properties "msDS-SupportedEncryptionTypes"
foreach($User in $Users)
{
    # If none are currently supported, enable AES256
    $encTypes = $User."msDS-SupportedEncryptionType"
    if(($encTypes -band $AES128) -ne $AES128 -and ($encTypes -band $AES256) -ne $AES256)
    {
        Set-ADUser $User -Replace @{"msDS-SupportedEncryptionTypes"=($encTypes -bor $AES256)}
    }
}
####### AD-Kerberos-AES.ps1 #######



####### ktpass examples for keytab creation #######
# remember, the user in AD should have AES enabled (programmatically or manually doesn't matter)

ktpass -princ http/keycloak.tai.intra@TAI.INTRA -SetUPN -pass !Tai2019! -mapuser tai\keycloak -crypto all -ptype KRB5_NT_PRINCIPAL -out keycloak.keytab -kvno 0

ktpass -princ cifs/alfresco6.tst.lcl@TST.LCL -pass !Alfresco!6 -mapuser tst\cifsalfresco6 -crypto all -ptype KRB5_NT_PRINCIPAL -out cifsalfresco6.keytab -kvno 0

####### ktpass examples for keytab creation #######



# Now, a CRITICAL step that is often forgot is to check that the Service Principal Name (SPN) for the user in AD and the SPN
# in the keytab file are IDENTICAL (case sensitivity matters here).

setspn -L keycloak
Registered ServicePrincipalNames for CN=Keycloak,OU=test_Keycloak,OU=lab,DC=tai,DC=intra:
        http/keycloak.tai.intra



ktpass /in keycloak.keytab

[...]
keysize 84 http/keycloak.tai.intra@TAI.INTRA ptype 1 (KRB5_NT_PRINCIPAL) vno 0 etype 0x12 (AES256-SHA1) keylength 32 (0x6e41abbb4f819d3d106c001b2c3af2730f0e8d86d4b075c3f289311f374ebe80)
[...]

# So, from the output we see that we have a difference; we should add http/keycloak.tai.intra@TAI.INTRA to the user's SPN in AD.

setspn -S http/keycloak.tai.intra@TAI.INTRA keycloak
Checking domain DC=tai,DC=intra

Registering ServicePrincipalNames for CN=Keycloak,OU=test_Keycloak,OU=lab,DC=tai,DC=intra
        http/keycloak.tai.intra@TAI.INTRA
Updated object


# let's see if it ok now (YES, it is)
setspn -L keycloak
Registered ServicePrincipalNames for CN=Keycloak,OU=test_Keycloak,OU=lab,DC=tai,DC=intra:
        http/keycloak.tai.intra@TAI.INTRA
        http/keycloak.tai.intra

# now, copy the keytab file (keycloak.keytab for in the example) to the Unix machine
# still from the Unix machine, test you can actually get a Kerberos ticket

kinit http/keycloak.tai.intra@TAI.INTRA -k -t /etc/keycloak.keytab

klist
Ticket cache: KEYRING:persistent:0:0
Default principal: http/keycloak.tai.intra@TAI.INTRA

Valid starting       Expires              Service principal
08/01/2019 10:32:14  08/01/2019 20:32:14  krbtgt/TAI.INTRA@TAI.INTRA
	renew until 15/01/2019 10:32:14

# OK, it worked.
